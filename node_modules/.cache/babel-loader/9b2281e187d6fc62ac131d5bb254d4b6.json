{"remainingRequest":"/Volumes/Macintosh HD - Data/project/金融项目/node_modules/babel-loader/lib/index.js!/Volumes/Macintosh HD - Data/project/金融项目/src/utils/service.js","dependencies":[{"path":"/Volumes/Macintosh HD - Data/project/金融项目/src/utils/service.js","mtime":1638503609828},{"path":"/Volumes/Macintosh HD - Data/project/金融项目/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Macintosh HD - Data/project/金融项目/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOwp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogImxvY2FsaG9zdDo4MDgwIiwKICAvLyB1cmwgPSBiYXNlIHVybCArIHJlcXVlc3QgdXJsCiAgdGltZW91dDogNTAwMCAvLyByZXF1ZXN0IHRpbWVvdXQKCn0pOwpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgY29uc29sZS5sb2coIui/memHjOaYr+ivt+axguaLpuaIqiIpOwoKICBpZiAoZ2V0VG9rZW4oKSkgewogICAgY29uZmlnLmhlYWRlcnNbJ3Rva2VuJ10gPSBnZXRUb2tlbigpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7CiAgY29uc29sZS5sb2coIui/memHjOaYr+WTjeW6lOaLpuaIqiIsIHJlc3BvbnNlKTsgLy8gaWYgdGhlIGN1c3RvbSBjb2RlIGlzIG5vdCAyMDAwMCwgaXQgaXMganVkZ2VkIGFzIGFuIGVycm9yLgoKICBpZiAocmVzLmNvZGUgIT09IDIwMCkgewogICAgTWVzc2FnZSh7CiAgICAgIG1lc3NhZ2U6IHJlcy5tZXNzYWdlIHx8ICdFcnJvcicsCiAgICAgIHR5cGU6ICdlcnJvcicKICAgIH0pOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMubWVzc2FnZSB8fCAnRXJyb3InKSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiByZXM7CiAgfQp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBNZXNzYWdlKHsKICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsCiAgICB0eXBlOiAnZXJyb3InCiAgfSk7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["/Volumes/Macintosh HD - Data/project/金融项目/src/utils/service.js"],"names":["axios","Message","getToken","service","create","baseURL","timeout","interceptors","request","use","config","console","log","headers","error","Promise","reject","response","res","data","code","message","type","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,gBADgB;AACE;AAC3BC,EAAAA,OAAO,EAAE,IAFgB,CAEX;;AAFW,CAAb,CAAhB;AAIAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACNC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,MAAIV,QAAQ,EAAZ,EAAgB;AACZQ,IAAAA,MAAM,CAACG,OAAP,CAAe,OAAf,IAA0BX,QAAQ,EAAlC;AACH;;AACD,SAAOQ,MAAP;AACH,CAPL,EAQI,UAAAI,KAAK,EAAI;AACL;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAFK,CAEc;;AACnB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAZL;AAcAX,OAAO,CAACI,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CACI,UAAAQ,QAAQ,EAAI;AACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBK,QAAtB,EAFQ,CAGR;;AACA,MAAIC,GAAG,CAACE,IAAJ,KAAa,GAAjB,EAAsB;AAClBnB,IAAAA,OAAO,CAAC;AACJoB,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAAJ,IAAe,OADpB;AAEJC,MAAAA,IAAI,EAAE;AAFF,KAAD,CAAP;AAIA,WAAOP,OAAO,CAACC,MAAR,CAAe,IAAIO,KAAJ,CAAUL,GAAG,CAACG,OAAJ,IAAe,OAAzB,CAAf,CAAP;AACH,GAND,MAMO;AACH,WAAOH,GAAP;AACH;AACJ,CAdL,EAeI,UAAAJ,KAAK,EAAI;AACLb,EAAAA,OAAO,CAAC;AACJoB,IAAAA,OAAO,EAAEP,KAAK,CAACO,OADX;AAEJC,IAAAA,IAAI,EAAE;AAFF,GAAD,CAAP;AAIA,SAAOP,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CArBL;AAuBA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport { getToken } from '@/utils/auth'\r\nconst service = axios.create({\r\n    baseURL: \"localhost:8080\", // url = base url + request url\r\n    timeout: 5000 // request timeout\r\n})\r\nservice.interceptors.request.use(\r\n    config => {\r\n        console.log(\"这里是请求拦截\")\r\n        if (getToken()) {\r\n            config.headers['token'] = getToken()\r\n        }\r\n        return config\r\n    },\r\n    error => {\r\n        // do something with request error\r\n        console.log(error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\nservice.interceptors.response.use(\r\n    response => {\r\n        const res = response.data\r\n        console.log(\"这里是响应拦截\",response)\r\n        // if the custom code is not 20000, it is judged as an error.\r\n        if (res.code !== 200) {\r\n            Message({\r\n                message: res.message || 'Error',\r\n                type: 'error',\r\n            })\r\n            return Promise.reject(new Error(res.message || 'Error'))\r\n        } else {\r\n            return res\r\n        }\r\n    },\r\n    error => {\r\n        Message({\r\n            message: error.message,\r\n            type: 'error',\r\n        })\r\n        return Promise.reject(error)\r\n    }\r\n)\r\nexport default service"]}]}